// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: x1BtAZcYDoHQadMwGq1GLr
// Component: tGmi9MLpd58b

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { AntdButton } from "@plasmicpkgs/antd5/skinny/registerButton";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: x1BtAZcYDoHQadMwGq1GLr/projectcss
import sty from "./PlasmicPartnerLogos.module.css"; // plasmic-import: tGmi9MLpd58b/css

createPlasmicElementProxy;

export type PlasmicPartnerLogos__VariantMembers = {};
export type PlasmicPartnerLogos__VariantsArgs = {};
type VariantPropType = keyof PlasmicPartnerLogos__VariantsArgs;
export const PlasmicPartnerLogos__VariantProps = new Array<VariantPropType>();

export type PlasmicPartnerLogos__ArgsType = {};
type ArgPropType = keyof PlasmicPartnerLogos__ArgsType;
export const PlasmicPartnerLogos__ArgProps = new Array<ArgPropType>();

export type PlasmicPartnerLogos__OverridesType = {
  partnerLogos?: Flex__<"section">;
  columns?: Flex__<"div">;
  button?: Flex__<typeof AntdButton>;
  freeBox?: Flex__<"div">;
};

export interface DefaultPartnerLogosProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicPartnerLogos__RenderFunc(props: {
  variants: PlasmicPartnerLogos__VariantsArgs;
  args: PlasmicPartnerLogos__ArgsType;
  overrides: PlasmicPartnerLogos__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const $translator = usePlasmicTranslator?.();
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  return (
    <section
      data-plasmic-name={"partnerLogos"}
      data-plasmic-override={overrides.partnerLogos}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        sty.partnerLogos
      )}
    >
      <div
        data-plasmic-name={"columns"}
        data-plasmic-override={overrides.columns}
        className={classNames(projectcss.all, sty.columns)}
      >
        <div className={classNames(projectcss.all, sty.column__dDmN)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__kmg2Y
            )}
          >
            <Trans__>{"Who is involved  "}</Trans__>
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__lzqP
            )}
          >
            <Trans__>
              {
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 500 }}
                  >
                    {
                      "We are a Wellcome funded project that brings together expertise across research, policy, practice, design, and lived experience from across the globe."
                    }
                  </span>
                </React.Fragment>
              }
            </Trans__>
          </div>
        </div>
        <div className={classNames(projectcss.all, sty.column__kqP2O)}>
          <AntdButton
            data-plasmic-name={"button"}
            data-plasmic-override={overrides.button}
            className={classNames("__wab_instance", sty.button)}
            danger={false}
            ghost={false}
            href={"https://www.connectingclimateminds.org/team"}
            size={"small"}
            target={true}
            type={"ghost"}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__o2Sl0
              )}
            >
              <Trans__>{"View Team"}</Trans__>
            </div>
          </AntdButton>
        </div>
      </div>
      <div
        data-plasmic-name={"freeBox"}
        data-plasmic-override={overrides.freeBox}
        className={classNames(projectcss.all, sty.freeBox)}
      >
        <PlasmicImg__
          alt={""}
          className={classNames(sty.img___35Vr2)}
          displayHeight={"auto"}
          displayMaxHeight={"none"}
          displayMaxWidth={"100%"}
          displayMinHeight={"0"}
          displayMinWidth={"0"}
          displayWidth={"323px"}
          loading={"lazy"}
          src={{
            src: "/plasmic/dev_goh/images/climateCarespng.png",
            fullWidth: 855,
            fullHeight: 855,
            aspectRatio: undefined
          }}
        />

        <PlasmicImg__
          alt={""}
          className={classNames(sty.img__aLdy0)}
          displayHeight={"auto"}
          displayMaxHeight={"none"}
          displayMaxWidth={"100%"}
          displayMinHeight={"0"}
          displayMinWidth={"0"}
          displayWidth={"323px"}
          loading={"lazy"}
          src={{
            src: "/plasmic/dev_goh/images/climateCentrepng.png",
            fullWidth: 855,
            fullHeight: 855,
            aspectRatio: undefined
          }}
        />

        <PlasmicImg__
          alt={""}
          className={classNames(sty.img__ksdKp)}
          displayHeight={"auto"}
          displayMaxHeight={"none"}
          displayMaxWidth={"100%"}
          displayMinHeight={"0"}
          displayMinWidth={"0"}
          displayWidth={"323px"}
          loading={"lazy"}
          src={{
            src: "/plasmic/dev_goh/images/forceOfNaturepng.png",
            fullWidth: 855,
            fullHeight: 855,
            aspectRatio: undefined
          }}
        />

        <PlasmicImg__
          alt={""}
          className={classNames(sty.img__u5H0B)}
          displayHeight={"auto"}
          displayMaxHeight={"none"}
          displayMaxWidth={"100%"}
          displayMinHeight={"0"}
          displayMinWidth={"0"}
          displayWidth={"323px"}
          loading={"lazy"}
          src={{
            src: "/plasmic/dev_goh/images/claretianUnipng.png",
            fullWidth: 855,
            fullHeight: 855,
            aspectRatio: undefined
          }}
        />

        <PlasmicImg__
          alt={""}
          className={classNames(sty.img__b4Sz)}
          displayHeight={"auto"}
          displayMaxHeight={"none"}
          displayMaxWidth={"100%"}
          displayMinHeight={"0"}
          displayMinWidth={"0"}
          displayWidth={"323px"}
          loading={"lazy"}
          src={{
            src: "/plasmic/dev_goh/images/stLukesMedicalCentrepng.png",
            fullWidth: 855,
            fullHeight: 855,
            aspectRatio: undefined
          }}
        />

        <PlasmicImg__
          alt={""}
          className={classNames(sty.img___4XjrK)}
          displayHeight={"auto"}
          displayMaxHeight={"none"}
          displayMaxWidth={"100%"}
          displayMinHeight={"0"}
          displayMinWidth={"0"}
          displayWidth={"323px"}
          loading={"lazy"}
          src={{
            src: "/plasmic/dev_goh/images/sustyVibespng.png",
            fullWidth: 855,
            fullHeight: 855,
            aspectRatio: undefined
          }}
        />

        <PlasmicImg__
          alt={""}
          className={classNames(sty.img__uyPc8)}
          displayHeight={"auto"}
          displayMaxHeight={"none"}
          displayMaxWidth={"100%"}
          displayMinHeight={"0"}
          displayMinWidth={"0"}
          displayWidth={"323px"}
          loading={"lazy"}
          src={{
            src: "/plasmic/dev_goh/images/imperialpng.png",
            fullWidth: 855,
            fullHeight: 855,
            aspectRatio: undefined
          }}
        />

        <PlasmicImg__
          alt={""}
          className={classNames(sty.img__qJm47)}
          displayHeight={"auto"}
          displayMaxHeight={"none"}
          displayMaxWidth={"100%"}
          displayMinHeight={"0"}
          displayMinWidth={"0"}
          displayWidth={"323px"}
          loading={"lazy"}
          src={{
            src: "/plasmic/dev_goh/images/cmhNetworkpng.png",
            fullWidth: 855,
            fullHeight: 855,
            aspectRatio: undefined
          }}
        />

        <PlasmicImg__
          alt={""}
          className={classNames(sty.img__jucTl)}
          displayHeight={"auto"}
          displayMaxHeight={"none"}
          displayMaxWidth={"100%"}
          displayMinHeight={"0"}
          displayMinWidth={"0"}
          displayWidth={"323px"}
          loading={"lazy"}
          src={{
            src: "/plasmic/dev_goh/images/ighIpng.png",
            fullWidth: 855,
            fullHeight: 855,
            aspectRatio: undefined
          }}
        />

        <PlasmicImg__
          alt={""}
          className={classNames(sty.img___3Nqk)}
          displayHeight={"auto"}
          displayMaxHeight={"none"}
          displayMaxWidth={"100%"}
          displayMinHeight={"0"}
          displayMinWidth={"0"}
          displayWidth={"323px"}
          loading={"lazy"}
          src={{
            src: "/plasmic/dev_goh/images/westIndiesUnipng.png",
            fullWidth: 855,
            fullHeight: 855,
            aspectRatio: undefined
          }}
        />

        <PlasmicImg__
          alt={""}
          className={classNames(sty.img__d8N0N)}
          displayHeight={"auto"}
          displayMaxHeight={"none"}
          displayMaxWidth={"100%"}
          displayMinHeight={"0"}
          displayMinWidth={"0"}
          displayWidth={"323px"}
          loading={"lazy"}
          src={{
            src: "/plasmic/dev_goh/images/ifrCpng.png",
            fullWidth: 855,
            fullHeight: 855,
            aspectRatio: undefined
          }}
        />

        <PlasmicImg__
          alt={""}
          className={classNames(sty.img__xChx5)}
          displayHeight={"auto"}
          displayMaxHeight={"none"}
          displayMaxWidth={"100%"}
          displayMinHeight={"0"}
          displayMinWidth={"0"}
          displayWidth={"323px"}
          loading={"lazy"}
          src={{
            src: "/plasmic/dev_goh/images/granthampng.png",
            fullWidth: 855,
            fullHeight: 855,
            aspectRatio: undefined
          }}
        />
      </div>
    </section>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  partnerLogos: ["partnerLogos", "columns", "button", "freeBox"],
  columns: ["columns", "button"],
  button: ["button"],
  freeBox: ["freeBox"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  partnerLogos: "section";
  columns: "div";
  button: typeof AntdButton;
  freeBox: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPartnerLogos__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPartnerLogos__VariantsArgs;
    args?: PlasmicPartnerLogos__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicPartnerLogos__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicPartnerLogos__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicPartnerLogos__ArgProps,
          internalVariantPropNames: PlasmicPartnerLogos__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicPartnerLogos__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "partnerLogos") {
    func.displayName = "PlasmicPartnerLogos";
  } else {
    func.displayName = `PlasmicPartnerLogos.${nodeName}`;
  }
  return func;
}

export const PlasmicPartnerLogos = Object.assign(
  // Top-level PlasmicPartnerLogos renders the root element
  makeNodeComponent("partnerLogos"),
  {
    // Helper components rendering sub-elements
    columns: makeNodeComponent("columns"),
    button: makeNodeComponent("button"),
    freeBox: makeNodeComponent("freeBox"),

    // Metadata about props expected for PlasmicPartnerLogos
    internalVariantProps: PlasmicPartnerLogos__VariantProps,
    internalArgProps: PlasmicPartnerLogos__ArgProps
  }
);

export default PlasmicPartnerLogos;
/* prettier-ignore-end */
